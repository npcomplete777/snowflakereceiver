name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        
    - name: Install dependencies
      run: |
        cd $GITHUB_WORKSPACE
        go mod download
        go mod tidy
        
    - name: Run tests
      run: |
        cd $GITHUB_WORKSPACE
        go test ./receiver -v -race -coverprofile=coverage.out
        
    - name: Check coverage
      run: |
        cd $GITHUB_WORKSPACE
        COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
        echo "Coverage: $COVERAGE%"
        if (( $(echo "$COVERAGE < 70" | bc -l) )); then
          echo "❌ Coverage below 70%!"
          exit 1
        fi
        echo "✅ Coverage above 70%"
        
    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        
    - name: Run go vet
      run: go vet ./receiver
      
    - name: Run staticcheck
      uses: dominikh/staticcheck-action@v1
      with:
        version: "latest"
        install-go: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        args: --timeout=5m
```

---

## **4. Create .gitignore**

Create `~/snowflakereceiver/.gitignore`:
```
# Binaries
otelcol-snowflake/
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool
*.out
coverage.html
coverage.out
COVERAGE_REPORT.txt

# Go workspace file
go.work

# Dependency directories
vendor/

# IDE specific files
.vscode/
.idea/
*.swp
*.swo
*~

# OS specific files
.DS_Store
Thumbs.db

# Logs
*.log
collector.log
test-intervals.log

# Sensitive files (DO NOT commit!)
config-test-all-metrics.yaml
*.password
*.secret

# Build artifacts
dist/
build/
