# ============================================================================
# EVENT TABLES EXAMPLE - SECONDS-LEVEL LATENCY! ðŸ”¥
# ============================================================================
# Event Tables provide near real-time monitoring (seconds vs 45min-3hr).
# Requires Event Table setup in Snowflake first.
#
# Setup in Snowflake:
#   CREATE EVENT TABLE SNOWFLAKE.PUBLIC.MY_EVENT_TABLE;
#   ALTER SESSION SET EVENT_TABLE = 'SNOWFLAKE.PUBLIC.MY_EVENT_TABLE';
#
# Use for: Real-time alerting, operational monitoring, error detection
# ============================================================================

receivers:
  snowflake:
    user: "YOUR_SNOWFLAKE_USER"
    password: "YOUR_SNOWFLAKE_PASSWORD"
    account: "your-account-name"
    warehouse: "COMPUTE_WH"
    database: "SNOWFLAKE"
    schema: "ACCOUNT_USAGE"
    
    # Standard metrics (keep existing)
    metrics:
      current_queries:
        enabled: true
        interval: "1m"
      warehouse_load:
        enabled: true
        interval: "1m"
      query_history:
        enabled: true
        interval: "5m"
      credit_usage:
        enabled: true
        interval: "5m"
      storage_metrics:
        enabled: false  # Disable to reduce load
      login_history:
        enabled: true
        interval: "10m"
      data_pipeline:
        enabled: false
      database_storage:
        enabled: false
      task_history:
        enabled: false
      replication_usage:
        enabled: false
      auto_clustering_history:
        enabled: false
    
    # EVENT TABLES - SECONDS-LEVEL LATENCY! ðŸ”¥
    event_tables:
      enabled: true
      table_name: "SNOWFLAKE.ACCOUNT_USAGE.EVENT_TABLE"  # Your event table
      
      query_logs:
        enabled: true
        interval: "30s"  # Query every 30 seconds!
      
      task_logs:
        enabled: true
        interval: "30s"
      
      function_logs:
        enabled: true
        interval: "30s"
      
      procedure_logs:
        enabled: true
        interval: "30s"
    
    # Organization metrics disabled
    organization:
      enabled: false
    
    # Custom queries disabled
    custom_queries:
      enabled: false

processors:
  batch:
    timeout: 10s

exporters:
  otlphttp:
    endpoint: "https://YOUR_TENANT.live.dynatrace.com/api/v2/otlp"
    headers:
      Authorization: "Api-Token YOUR_DYNATRACE_API_TOKEN"

service:
  pipelines:
    metrics:
      receivers: [snowflake]
      processors: [batch]
      exporters: [otlphttp]
